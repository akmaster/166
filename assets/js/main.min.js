!(function () {
  'use strict';
  async function e() {
    const e = document.getElementById('recent-activity');
    if (!e) return;
    try {
      const t = await fetch('/api/get-activity.php?limit=10'),
        a = await t.json();
      a.success && a.data.length > 0
        ? (e.innerHTML =
            '<ul class="activity-list">' +
            a.data
              .map(
                (e) =>
                  `\n                        <li class="activity-item">\n                            <div>\n                                <div class="amount">${e.formatted_amount}</div>\n                                <div class="details">${e.streamer_name} â€¢ ${e.time_ago}</div>\n                            </div>\n                        </li>\n                    `
              )
              .join('') +
            '</ul>')
        : (e.innerHTML = '<p class="loading">HenÃ¼z iÅŸlem yok</p>');
    } catch (t) {
      e.innerHTML = '<p class="loading">YÃ¼klenemedi</p>';
    }
  }
  async function t() {
    const e = document.getElementById('public-stats');
    if (!e) return;
    try {
      const t = await fetch('/api/get-public-stats.php'),
        a = await t.json();
      if (a.success) {
        const t = a.data;
        e.innerHTML = `\n                    <div class="stat-item">\n                        <div class="stat-value">${t.total_users}</div>\n                        <div class="stat-label">Toplam KullanÄ±cÄ±</div>\n                    </div>\n                    <div class="stat-item">\n                        <div class="stat-value">${t.formatted_rewards}</div>\n                        <div class="stat-label">DaÄŸÄ±tÄ±lan Ã–dÃ¼l</div>\n                    </div>\n                    <div class="stat-item">\n                        <div class="stat-value">${t.total_submissions}</div>\n                        <div class="stat-label">Kod KullanÄ±mÄ±</div>\n                    </div>\n                `;
      }
    } catch (e) {
      console.error('Failed to load stats');
    }
  }
  function a(e, t, a) {
    (e.textContent = t),
      (e.className = 'result-message ' + a),
      (e.style.display = 'block'),
      setTimeout(() => {
        e.style.display = 'none';
      }, 5e3);
  }
  document.querySelectorAll('.tab-btn').forEach((e) => {
    e.addEventListener('click', function () {
      const e = this.dataset.tab;
      document.querySelectorAll('.tab-btn').forEach((e) => e.classList.remove('active')),
        this.classList.add('active'),
        document.querySelectorAll('.tab-content').forEach((e) => {
          e.classList.remove('active');
        }),
        document.getElementById(e + '-tab')?.classList.add('active');
    });
  }),
    document.querySelectorAll('.dashboard-tab').forEach((e) => {
      e.addEventListener('click', function () {
        const e = this.dataset.tab;
        document.querySelectorAll('.dashboard-tab').forEach((e) => e.classList.remove('active')),
          this.classList.add('active'),
          document.querySelectorAll('.tab-panel').forEach((e) => {
            e.classList.remove('active');
          }),
          document.getElementById(e + '-panel')?.classList.add('active');
      });
    }),
    document.getElementById('code-submit-form')?.addEventListener('submit', async function (e) {
      e.preventDefault();
      const t = document.getElementById('code-input'),
        n = t.value.trim(),
        d = document.getElementById('code-result');
      if (!n || 6 !== n.length || !/^\d{6}$/.test(n))
        return void a(d, 'LÃ¼tfen 6 haneli bir kod girin', 'error');
      const s = new FormData();
      s.append('code', n);
      try {
        const e = await fetch('/api/submit-code.php', { method: 'POST', body: s }),
          n = await e.json();
        n.success
          ? (a(d, n.message, 'success'), (t.value = ''), setTimeout(() => location.reload(), 2e3))
          : a(d, n.message, 'error');
      } catch (e) {
        a(d, 'BaÄŸlantÄ± hatasÄ±', 'error');
      }
    }),
    document.getElementById('request-payout-btn')?.addEventListener('click', async function () {
      if (!confirm('Ã–deme talebinde bulunmak istediÄŸinize emin misiniz?')) return;
      (this.disabled = !0), (this.textContent = 'Ä°ÅŸleniyor...');
      try {
        const e = await fetch('/api/request-payout.php', { method: 'POST' }),
          t = await e.json();
        t.success
          ? (alert(t.message), location.reload())
          : (alert('Hata: ' + t.message),
            (this.disabled = !1),
            (this.textContent = 'ðŸ’¸ Ã–deme Talep Et'));
      } catch (e) {
        alert('BaÄŸlantÄ± hatasÄ±'), (this.disabled = !1), (this.textContent = 'ðŸ’¸ Ã–deme Talep Et');
      }
    });
  const n = document.getElementById('topup-modal'),
    d = document.getElementById('request-topup-btn'),
    s = n?.querySelector('.close');
  d?.addEventListener('click', () => {
    n.classList.add('active'), (n.style.display = 'flex');
  }),
    s?.addEventListener('click', () => {
      n.classList.remove('active'), (n.style.display = 'none');
    }),
    window.addEventListener('click', (e) => {
      e.target === n && (n.classList.remove('active'), (n.style.display = 'none'));
    }),
    document.getElementById('topup-form')?.addEventListener('submit', async function (e) {
      e.preventDefault();
      const t = document.getElementById('topup-amount').value,
        a = document.getElementById('payment-proof').value,
        n = document.getElementById('topup-note').value,
        d = new FormData();
      d.append('amount', t), d.append('payment_proof', a), d.append('note', n);
      try {
        const e = await fetch('/api/request-topup.php', { method: 'POST', body: d }),
          t = await e.json();
        t.success ? (alert(t.message), location.reload()) : alert('Hata: ' + t.message);
      } catch (e) {
        alert('BaÄŸlantÄ± hatasÄ±');
      }
    }),
    document.querySelectorAll('.theme-item').forEach((e) => {
      e.addEventListener('click', async function () {
        const e = this.dataset.theme;
        document.querySelectorAll('.theme-item').forEach((e) => e.classList.remove('active')),
          this.classList.add('active');
        const t = new FormData();
        t.append('theme', e);
        try {
          await fetch('/api/update-theme.php', { method: 'POST', body: t });
        } catch (e) {
          console.error('Failed to save theme');
        }
      });
    }),
    (window.copyOverlayLink = function () {
      const e = document.getElementById('overlay-link');
      e.select(),
        e.setSelectionRange(0, 99999),
        document.execCommand('copy'),
        alert('Link kopyalandÄ±!');
    }),
    document.addEventListener('DOMContentLoaded', () => {
      e(), t();
    });
})();
